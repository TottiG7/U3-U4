# -*- coding: utf-8 -*-
"""Practica 1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PFsK5Lw32Kqz-JLICyU4O00xodbHgLdG

# PRACTICA 1 - PARTE 1
"""

import tensorflow as tf
import numpy as np


# Definir los datos de entrenamiento
euros = np.array([1, 5, 10, 20, 50], dtype=float)
dolares = np.array([1.13, 5.65, 11.30, 22.60, 56.50], dtype=float)


# Definir la fórmula de conversión
def euros_a_dolares(euros):
    return euros * 1.13


# Crear el modelo
oculta1 = tf.keras.layers.Dense(units=3, input_shape=[1])
oculta2 = tf.keras.layers.Dense(units=3)
salida = tf.keras.layers.Dense(units=1)
modelo = tf.keras.Sequential([oculta1, oculta2, salida])


# Compilar el modelo
modelo.compile(
    optimizer=tf.keras.optimizers.Adam(0.1),
    loss='mean_squared_error'
)


# Entrenar el modelo
print("Comenzando entrenamiento...")
historial = modelo.fit(euros, dolares, epochs=1000, verbose=False)
print("Modelo entrenado!!!")


# Realizar una predicción
print("Realizar una prediccion")
resultado = modelo.predict([100.0])
print("El resultado es " + str(resultado) + " dólares")


# Guardar el modelo
modelo.save('euros_a_dolares.h5')


# Convertir 100 euros a dólares
euros = 100
dolares = euros_a_dolares(euros)
print("100 euros son " + str(dolares) + " dólares")



pip install tensorflowjs

!mkdir temperatura

!tensorflowjs_converter --input_format keras celcius_fahrenheit.h5 temperatura

!ls temperatura
